info:
  contact: {}
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Retrieve a list of songs available in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get list of songs
      tags:
      - Songs
    post:
      consumes:
      - multipart/form-data
      description: Add a new song to the database
      parameters:
      - description: Authorization Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Song Title
        in: formData
        name: title
        required: true
        type: string
      - description: Song Release Year
        in: formData
        name: year
        required: true
        type: integer
      - description: Artist Name
        in: formData
        name: artist
        required: true
        type: string
      - description: MP3 File
        in: formData
        name: song
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add a new song
      tags:
      - Songs
  /songs/{id}/stream:
    get:
      consumes:
      - '*/*'
      description: Stream a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      - description: 'Range, ex: Range: bytes=0-1023'
        in: header
        name: Range
        type: string
      produces:
      - audio/mpeg
      responses:
        "206":
          description: Partial Content
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Stream a song
      tags:
      - Songs
swagger: "2.0"
